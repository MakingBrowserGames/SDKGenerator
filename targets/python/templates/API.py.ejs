import asyncio

# TODO: move to shared file (useable in other generated files)
def noneOrEmpty(str):
    return str == "" or str == None

<%- generateApiSummary("", api, "description")
%>class PlayFab<%- api.name %>API:
<% for(var i in api.calls) { var apiCall = api.calls[i];
%><%- generateApiSummary("    ", apiCall, "summary")
%><%- getDeprecationAttribute("    ", apiCall)
%>    async def <%- apiCall.name %>Async(request, customData, extraHeaders):
<%- getRequestActions("        ", apiCall) %>
        var httpResult = await PlayFabHttp.DoPost("<%- apiCall.url %>", request, <%- getAuthParams(apiCall) %>, extraHeaders)
        if type(httpResult) is PlayFabError:
            var error = (PlayFabError)httpResult
            PlayFabSettings.GlobalErrorHandler?.Invoke(error)
            return <%- apiCall.result %>(error, customData)

        var resultRawJson = (string)httpResult;
        var resultData = JsonWrapper.DeserializeObject<PlayFabJsonSuccess<<%- apiCall.result %>>>(resultRawJson)
        var result = resultData.data
<%- getResultActions("        ", apiCall, api) %>
        return new <%- apiCall.result %>(result, customData)

<% } %><% if (authKey) {
%>        # Determine if the client session ticket is set, without actually making it public
        # public static bool IsClientLoggedIn()
        def IsClientLoggedIn:
            return !(PlayFabSettings.ClientSessionTicket == "" or PlayFabSettings.ClientSessionTicket == None)

        async def MultiStepClientLogin(needsAttribution):
            if needsAttribution and !PlayFabSettings.DisableAdvertising and !noneOrEmpty(PlayFabSettings.AdvertisingIdType) and !noneOrEmpty(PlayFabSettings.AdvertisingIdValue):
                var request = new AttributeInstallRequest()
                if PlayFabSettings.AdvertisingIdType == PlayFabSettings.AD_TYPE_IDFA:
                    request.Idfa = PlayFabSettings.AdvertisingIdValue
                else if PlayFabSettings.AdvertisingIdType == PlayFabSettings.AD_TYPE_ANDROID_ID:
                    request.Adid = PlayFabSettings.AdvertisingIdValue
                else
                    return None
                return await AttributeInstallAsync(request)
            return None

<% } %>
